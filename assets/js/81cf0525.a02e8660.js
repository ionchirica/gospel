"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[901],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(n),f=i,d=m["".concat(l,".").concat(f)]||m[f]||u[f]||r;return n?a.createElement(d,o(o({ref:t},p),{},{components:n})):a.createElement(d,o({ref:t},p))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:i,o[1]=s;for(var c=2;c<r;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},3827:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return o},default:function(){return m},frontMatter:function(){return r},metadata:function(){return s},toc:function(){return c}});var a=n(7462),i=(n(7294),n(3905));const r={sidebar_position:1},o="Gospel Special Comment Syntax",s={unversionedId:"language/syntax",id:"language/syntax",title:"Gospel Special Comment Syntax",description:"Gospel specifications are written in interface files (.mli). They are written",source:"@site/docs/language/syntax.md",sourceDirName:"language",slug:"/language/syntax",permalink:"/gospel/language/syntax",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Union-find",permalink:"/gospel/walkthroughs/union-find"},next:{title:"Lexical Conventions",permalink:"/gospel/language/lexical-conventions"}},l={},c=[{value:"Specifications and Documentation Comments",id:"specifications-and-documentation-comments",level:2}],p={toc:c};function m(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"gospel-special-comment-syntax"},"Gospel Special Comment Syntax"),(0,i.kt)("p",null,"Gospel specifications are written in interface files (",(0,i.kt)("inlineCode",{parentName:"p"},".mli"),"). They are written\nin special comments, starting with the ",(0,i.kt)("inlineCode",{parentName:"p"},"@")," character",(0,i.kt)("sup",{parentName:"p",id:"fnref-1"},(0,i.kt)("a",{parentName:"sup",href:"#fn-1",className:"footnote-ref"},"1")),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ocaml"},"val f: int -> int           (* An OCaml value declaration *)\n(*@ y = f x\n    ensures x > 0 *)        (* Its Gospel specification   *)\n\n(*@ type t *)               (* A ghost type declaration   *)\n(*@ ephemeral\n    model size: int *)      (* Its Gospel specification   *)\n")),(0,i.kt)("p",null,"Those comments must be located ",(0,i.kt)("em",{parentName:"p"},"after")," the item they specify."),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"Gospel is using a preprocessor to turn those special comments into OCaml\nattributes behind the scene before feeding the result to the standard OCaml\nparser (see the ",(0,i.kt)("a",{parentName:"p",href:"attributes"},"appendix page")," for more information)."),(0,i.kt)("p",{parentName:"admonition"},"This has the following consequence: Gospel special comments can only appear at a\npositions where OCaml accepts attributes. So given the following interface\n",(0,i.kt)("inlineCode",{parentName:"p"},"misplaced.mli"),":"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-ocaml",metastring:"invalidSyntax",invalidSyntax:!0},"val f : int -> (*@ misplaced *) int\n")),(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("inlineCode",{parentName:"p"},"gospel check misplaced.mli")," will complain with the following somewhat\nsurprising message:"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre"},"1 | val f : int -> (*@ misplaced *) int\n                   ^^^\nError: Syntax error.\n"))),(0,i.kt)("h2",{id:"specifications-and-documentation-comments"},"Specifications and Documentation Comments"),(0,i.kt)("p",null,"Note that Gospel annotations can be combined with traditional documentation\ncomments. For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ocaml",metastring:"invalidSyntax",invalidSyntax:!0},"val eucl_division: int -> int -> int * int\n(** this is an implementation of Euclidean division *)\n(*@ q, r = eucl_division x y\n    ... *)\n")),(0,i.kt)("div",{className:"footnotes"},(0,i.kt)("hr",{parentName:"div"}),(0,i.kt)("ol",{parentName:"div"},(0,i.kt)("li",{parentName:"ol",id:"fn-1"},"Existing specification languages for other host languages introduced this\nnotation, ",(0,i.kt)("em",{parentName:"li"},"e.g.,")," ",(0,i.kt)("a",{parentName:"li",href:"https://www.cs.ucf.edu/~leavens/JML/index.shtml"},"JML")," for\nJava and ",(0,i.kt)("a",{parentName:"li",href:"https://frama-c.com/html/acsl.html"},"ACSL")," for C. Hence Gospel\nalso uses this convention.",(0,i.kt)("a",{parentName:"li",href:"#fnref-1",className:"footnote-backref"},"\u21a9")))))}m.isMDXComponent=!0}}]);