"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[53],{1109:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Welcome!","href":"/gospel/","docId":"welcome"},{"type":"category","label":"Getting Started","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Installing Gospel","href":"/gospel/getting-started/installation","docId":"getting-started/installation"},{"type":"link","label":"Your first specification","href":"/gospel/getting-started/first-spec","docId":"getting-started/first-spec"},{"type":"link","label":"Now what?","href":"/gospel/getting-started/tools","docId":"getting-started/tools"},{"type":"link","label":"Going further","href":"/gospel/getting-started/going-further","docId":"getting-started/going-further"}]},{"type":"category","label":"Walk-throughs","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/gospel/walkthroughs/introduction","docId":"walkthroughs/introduction"},{"type":"link","label":"Fibonacci numbers","href":"/gospel/walkthroughs/fibonacci","docId":"walkthroughs/fibonacci"},{"type":"link","label":"Mutable queues","href":"/gospel/walkthroughs/mutable-queue","docId":"walkthroughs/mutable-queue"},{"type":"link","label":"Union-find","href":"/gospel/walkthroughs/union-find","docId":"walkthroughs/union-find"}]},{"type":"category","label":"Language specification","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Specification locations","href":"/gospel/language/locations","docId":"language/locations"},{"type":"link","label":"Lexical conventions","href":"/gospel/language/lexical-conventions","docId":"language/lexical-conventions"},{"type":"link","label":"Terms and Formulae","href":"/gospel/language/formulae","docId":"language/formulae"},{"type":"link","label":"Type specifications","href":"/gospel/language/type-specifications","docId":"language/type-specifications"},{"type":"link","label":"Constant specifications","href":"/gospel/language/constants-specifications","docId":"language/constants-specifications"},{"type":"link","label":"Function contracts","href":"/gospel/language/function-contracts","docId":"language/function-contracts"},{"type":"link","label":"Logical declarations","href":"/gospel/language/logical","docId":"language/logical"}]},{"type":"link","label":"Tips and Good Practices","href":"/gospel/good-practices","docId":"good-practices"}]},"docs":{"getting-started/first-spec":{"id":"getting-started/first-spec","title":"Your first specification","description":"Let us get started with a simple specification example, and specify a generic","sidebar":"tutorialSidebar"},"getting-started/going-further":{"id":"getting-started/going-further","title":"Going further","description":"This tutorial only covered very few features of Gospel. Please feel free to","sidebar":"tutorialSidebar"},"getting-started/installation":{"id":"getting-started/installation","title":"Installing Gospel","description":"Please make sure that you already have a decently recent version of ocaml and","sidebar":"tutorialSidebar"},"getting-started/tools":{"id":"getting-started/tools","title":"Now what?","description":"You\'ve written your first specification. Now what can you do with it?","sidebar":"tutorialSidebar"},"good-practices":{"id":"good-practices","title":"Tips and Good Practices","description":"Function Clauses Ordering","sidebar":"tutorialSidebar"},"language/constants-specifications":{"id":"language/constants-specifications","title":"Constant specifications","description":"OCaml constant specifications are simple. They consist of a list of clauses","sidebar":"tutorialSidebar"},"language/formulae":{"id":"language/formulae","title":"Terms and Formulae","description":"Gospel features terms (e.g. x+1) and formulae (e.g. forall i. f i > 0). This","sidebar":"tutorialSidebar"},"language/function-contracts":{"id":"language/function-contracts","title":"Function contracts","description":"A function contract is a formal Gospel specification attached to the declaration","sidebar":"tutorialSidebar"},"language/lexical-conventions":{"id":"language/lexical-conventions","title":"Lexical conventions","description":"Gospel borrows most of [OCaml\'s lexical","sidebar":"tutorialSidebar"},"language/locations":{"id":"language/locations","title":"Specification locations","description":"General conventions","sidebar":"tutorialSidebar"},"language/logical":{"id":"language/logical","title":"Logical declarations","description":"Functions and Predicates","sidebar":"tutorialSidebar"},"language/type-specifications":{"id":"language/type-specifications","title":"Type specifications","description":"OCaml types can be annotated with Gospel specifications in order to model their","sidebar":"tutorialSidebar"},"walkthroughs/fibonacci":{"id":"walkthroughs/fibonacci","title":"Fibonacci numbers","description":"In this example, we will look into specifying an efficient implementation of a","sidebar":"tutorialSidebar"},"walkthroughs/introduction":{"id":"walkthroughs/introduction","title":"Introduction","description":"This section features some real-world specifications using Gospel, and","sidebar":"tutorialSidebar"},"walkthroughs/mutable-queue":{"id":"walkthroughs/mutable-queue","title":"Mutable queues","description":"This example aims to provide a formal specification for a mutable queue data","sidebar":"tutorialSidebar"},"walkthroughs/union-find":{"id":"walkthroughs/union-find","title":"Union-find","description":"In this example, we will highlight an advanced use-case of ghost declarations in","sidebar":"tutorialSidebar"},"welcome":{"id":"welcome","title":"Welcome!","description":"Welcome to the Gospel documentation. We provide several resources","sidebar":"tutorialSidebar"}}}')}}]);